!function(){"use strict";class e{constructor(e,t,s,i,n){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImagePreview=s,this.handleDeleteCard=i,this.handleLikeClick=n}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this.handleLikeClick(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this.handleDeleteCard(this._id,this._cardElement)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImagePreview({name:this._name,link:this._link})}))}toggleLike(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}handleLikeButton(e){void 0!==e&&(this._isLiked=e),this._isLiked&&this.toggleLike()}getCardElement(){const e=document.querySelector(this._cardSelector).content.firstElementChild;this._cardElement=e.cloneNode(!0);const t=this._cardElement.querySelector(".card__image"),s=this._cardElement.querySelector(".card__title");return t.src=this._link,t.alt=this._name,s.textContent=this._name,this.handleLikeButton(this._isLiked),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._options=e,this._formElement=t,this._inputElements=Array.from(this._formElement.querySelectorAll(this._options.inputSelector)),this._submitButton=this._formElement.querySelector(this._options.submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._options.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._options.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._options.inputErrorClass),t.textContent="",t.classList.remove(this._options.errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}disableSubmitButton=()=>{this._submitButton.classList.add(this._options.inactiveButtonClass),this._submitButton.disabled=!0};_enableSubmitButton=()=>{this._submitButton.classList.remove(this._options.inactiveButtonClass),this._submitButton.disabled=!1};_toggleButton(){this._hasInvalidInput(this._inputElements)?this.disableSubmitButton():this._enableSubmitButton()}enableValidation(){this._toggleButton(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))})),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._toggleButton()}))}resetValidation(){this._toggleButton(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e){this._popUpElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"keydown"===e.type&&"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton=this._popUpElement.querySelector(".modal__close"),this._closeButton.addEventListener("click",(()=>{this.close()})),this._popUpElement.addEventListener("click",(e=>{"modal modal_opened"===e.target.className&&this.close()}))}}class n extends i{constructor(e,t){super(e),this._popUpForm=this._popUpElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popUpForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}_getInputValues(){const e={};return this._popUpForm.querySelectorAll(".modal__input").forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popUpForm.addEventListener("submit",(e=>{e.preventDefault(),this.setLoading(!0),this._handleFormSubmit(this._getInputValues())}))}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__error",errorClass:"modal__error_visible"},o=document.forms["edit-profile-form"],a=document.forms["add-card-form"],l=document.forms["edit-avatar-form"],d=document.querySelector("#profile-edit-button"),c=document.querySelector(".profile__add-button"),h=document.querySelector(".avatar__edit-icon"),_=document.querySelector("#profile-title-input"),m=document.querySelector("#profile-description-input"),u=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_getResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers,method:"GET"}).then(this._getResponse)}createCard(e){return fetch(`${this._baseUrl}/cards`,{headers:this._headers,method:"POST",body:JSON.stringify(e)}).then(this._getResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers,method:"DELETE"}).then(this._getResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"PUT"}).then(this._getResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"DELETE"}).then(this._getResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers,method:"GET"}).then(this._getResponse)}editUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers,method:"PATCH",body:JSON.stringify(e)}).then(this._getResponse)}editUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this._getResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c00d25e4-e498-4e3f-a0a9-735cb37a7bb4","Content-Type":"application/json"}});new t(r,o).enableValidation();const p=new t(r,a);p.enableValidation();const E=new t(r,l);let v;function f(e){e._isLiked?u.dislikeCard(e._id).then((()=>{e.toggleLike(),e._isLiked=!1})).catch((e=>{console.error(`Error on Card Dislike ${e}`)})):u.likeCard(e._id).then((()=>{e.toggleLike(),e._isLiked=!0})).catch((e=>{console.error(`Error on Card Like ${e}`)}))}E.enableValidation(),u.getInitialCards().then((e=>{v=new s({items:e,renderer:e=>{const t=b(e);v.addItem(t)}},".cards__list"),v.renderItems()})).catch((e=>console.error(e)));const b=t=>new e(t,"#card-template",k,y,f).getCardElement(),g=new n("#add-card-modal",(function(e){const t=e.title.trim(),s=e.link.trim();g.close(),a.reset(),p.disableSubmitButton(),u.createCard({name:t,link:s}).then((e=>{const t=b(e);v.addItem(t)})).finally((()=>{g.setLoading(!1)}))}));g.setEventListeners(),c.addEventListener("click",(()=>{g.open()}));const L=new class extends i{constructor(e){super(e),this._popUpImage=this._popUpElement.querySelector(".modal__preview-image"),this._popUpTitle=this._popUpElement.querySelector(".modal__preview-image-heading")}open(e){let{name:t,link:s}=e;this._popUpImage.src=s,this._popUpImage.alt=t,this._popUpTitle.textContent=t,super.open()}}("#preview-image-modal");function k(e){L.open(e)}function y(e,t){C.open(e,t),console.log(e,t)}L.setEventListeners();const C=new class extends i{constructor(e,t){super(e),this._confirmButton=document.querySelector("#confirmation-modal-button"),this._handleConfirmation=t,this._setEventListeners()}open(e,t){super.open(),this._cardId=e,this._cardElement=t}_setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(()=>{this._handleConfirmation(this._cardId,this._cardElement).then((()=>{this.close()})).catch((e=>{console.error("Error Deleting Card",e)}))}))}}("#modal-confirm",((e,t)=>u.deleteCard(e).then((()=>{t.remove()})))),S=new class{constructor(e){let{name:t,description:s,avatarSelector:i}=e;this._name=document.querySelector(t),this._description=document.querySelector(s),this._avatarElement=document.querySelector(i)}getUserInfo(){const e={};return e.name=this._name.textContent,e.description=this._description.textContent,e.avatar=this._avatarElement.src,e}setUserInfo(e){let{name:t,description:s,avatar:i}=e;this._name.textContent=t,this._description.textContent=s,this.setUserAvatar(i)}setUserAvatar(e){this._avatarElement.src=e}}({name:".profile__title",description:".profile__description",avatarSelector:".profile__image"});u.getUserInfo().then((e=>{S.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})})).catch((e=>console.error(e)));const U=new n("#profile-edit-modal",(function(e){u.editUserInfo({name:e.title,about:e.description}).then((e=>{S.setUserInfo({name:e.name,description:e.about,avatar:e.avatar})})).catch((e=>console.error(`Failed to update users info: ${e}`))).finally((()=>{U.setLoading(!1)})),U.close()}));U.setEventListeners(),d.addEventListener("click",(()=>{const e=S.getUserInfo();_.value=e.name,m.value=e.description,U.open()}));const I=new n("#edit-avatar-modal",(function(e){const t=e.avatar;l.reset(),I.close(),u.editUserAvatar(t).then((e=>{S.setUserAvatar(e.avatar)})).finally((()=>{I.setLoading(!1)}))}));I.setEventListeners(),h.addEventListener("click",(()=>{E.resetValidation(),I.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,